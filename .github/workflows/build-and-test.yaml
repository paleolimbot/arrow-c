on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: Build and Test

jobs:
  build-and-run-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get install -y cmake libgtest-dev

      - name: Cache Dependency Builds
        id: cache-deps-build
        uses: actions/cache@v3
        with:
          path: build-deps
          key: ${{ runner.os }}-1

      - name: Init build dir
        if: steps.cache-deps-build.outputs.cache-hit != 'true'
        run: mkdir build-deps

      - name: Fetch Arrow
        if: steps.cache-deps-build.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: apache/arrow
          ref: apache-arrow-8.0.0
          path: build-deps/arrow
          fetch-depth: 0

      - name: Build Arrow
        if: steps.cache-deps-build.outputs.cache-hit != 'true'
        run: |
          mkdir build-deps/arrow-build
          cd build-deps/arrow-build
          cmake ../arrow/cpp -DARROW_JSON=ON -DARROW_TESTING=ON -DBoost_SOURCE=BUNDLED
          cmake --build .

      - name: Install Arrow
        run: |
          cd build-deps/arrow-build
          cmake --install . --prefix ../../dist

      - name: Build arrowc
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DArrow_DIR=`pwd`/../dist/lib/cmake/arrow -DArrowTesting_DIR=`pwd`/../dist/lib/cmake/arrow -DARROWC_CODE_COVERAGE=ON -DARROWC_BUILD_TESTS=ON
          cmake --build .

      - name: Run tests
        run: |
          cd build
          ctest -T test --output-on-failure .

      - name: Calculate coverage
        run: |
          mkdir build/cov
          cd build/cov
          gcov -abcfu `find ../CMakeFiles/arrowc.dir/ -name "*.gcno"`

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          directory: build/cov
